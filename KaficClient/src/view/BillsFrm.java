/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.Controller;
import domen.AbstractObject;
import domen.Konobar;
import domen.Racun;
import domen.Sto;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import model.BillsTableModel;

/**
 *
 * @author elezs
 */
public class BillsFrm extends javax.swing.JFrame {

    /**
     * Creates new form BillsFrm
     */
    private Sto sto;
    private Konobar ulogovani;
    BillsTableModel btm;
    Racun r;
    List<AbstractObject> bills;

    public BillsFrm(Sto s, Konobar k) {
        initComponents();
        sto = s;
        ulogovani = k;
        r = new Racun();
        r.setKonobar(ulogovani);
        if(sto.isZauzet()){
            btnAddBill.setEnabled(false);
        }
        try {
            fixForm();
        } catch (Exception ex) {
            Logger.getLogger(BillsFrm.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showConfirmDialog(this, ex);
        }
        calculateDailyRevenue();
    }

    BillsFrm(Sto sto, Konobar ulogovani, Racun racun) {
        initComponents();
        this.sto = sto;
        this.ulogovani = ulogovani;
        r = racun;
        r.setKonobar(ulogovani);
        if(sto.isZauzet()){
            btnAddBill.setEnabled(false);
        }
        try {
            fixForm();
        } catch (Exception ex) {
            Logger.getLogger(BillsFrm.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showConfirmDialog(this, ex);
        }
        calculateDailyRevenue();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnAddBill = new javax.swing.JButton();
        btnDeleteBill = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLblSumBill = new javax.swing.JLabel();
        btnUpdateBill = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLblKonobar = new javax.swing.JLabel();
        jLblTable = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        jtfSearch = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        btnAddBill.setText("Dodaj novi racun");
        btnAddBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddBillActionPerformed(evt);
            }
        });

        btnDeleteBill.setText("Obrisi racun");
        btnDeleteBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteBillActionPerformed(evt);
            }
        });

        jLabel2.setText("Ukupan dnevni iznos:");

        jLblSumBill.setText("jLabel3");

        btnUpdateBill.setText("Dodaj u racun");
        btnUpdateBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateBillActionPerformed(evt);
            }
        });

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Sto:");

        jLabel3.setText("Konobar:");

        jLblKonobar.setText("jLabel4");

        jLblTable.setText("jLabel2");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(14, 14, 14)
                .addComponent(jLblTable)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jLblKonobar)
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLblTable)
                        .addComponent(jLabel3)
                        .addComponent(jLblKonobar))
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel4.setText("Pretrazi racune:");

        btnSearch.setText("Pretrazi");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jtfSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSearch))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLblSumBill))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnUpdateBill, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnAddBill)
                                    .addComponent(btnDeleteBill, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 31, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(btnSearch)
                            .addComponent(jtfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAddBill)
                        .addGap(45, 45, 45)
                        .addComponent(btnUpdateBill)
                        .addGap(52, 52, 52)
                        .addComponent(btnDeleteBill)
                        .addGap(109, 109, 109))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLblSumBill))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddBillActionPerformed
        // TODO add your handling code here:
        if(!sto.isZauzet()){
            sto.setZauzet(true);
            try {
                Controller.getControllerInstance().updateTable(sto);
                NewBillFrm nbf = new NewBillFrm(sto, ulogovani, this);
                refreshList(nbf.getRacun());
                nbf.setVisible(true);
                this.setVisible(false);
            } catch (Exception ex) {
                Logger.getLogger(BillsFrm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(rootPane, "Sto je zauzet i dalje, ne mozete dodavati novi racun!");
        }
    }//GEN-LAST:event_btnAddBillActionPerformed

    private void btnUpdateBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateBillActionPerformed
        // TODO add your handling code here:
        if (jTable1.getSelectedRow() != -1) {
            int index = jTable1.getSelectedRow();
//            Racun r = (Racun) btm.getBills().get(index);
            try {
                r = (Racun) Controller.getControllerInstance().getBills(sto).get(index);
                NewBillFrm nbf = new NewBillFrm(sto, ulogovani, this, r);
                nbf.setVisible(true);
                this.setVisible(false);
            } catch (Exception ex) {
                Logger.getLogger(BillsFrm.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Morate izabrati racun koji zelite da izmenite!");
            return;
        }
    }//GEN-LAST:event_btnUpdateBillActionPerformed

    private void btnDeleteBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteBillActionPerformed
        // TODO add your handling code here:
        if (jTable1.getSelectedRow() != -1) {
            try {
                int index = jTable1.getSelectedRow();
                Racun r = (Racun) btm.getBills().get(index);
                String s = Controller.getControllerInstance().deleteBill(r);
                btm.getBills().remove(index);
                btm.fireTableDataChanged();
                calculateDailyRevenue();
                System.out.println(s);
                JOptionPane.showMessageDialog(this, "Brisanje racuna uspesno");
                if(btm.getBills().isEmpty()){
                    sto.setZauzet(false);
                    Controller.getControllerInstance().updateTable(sto);
                    btnAddBill.setEnabled(true);
                }
            } catch (Exception ex) {
                Logger.getLogger(BillsFrm.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Morate izabrati racun za brisanje!");
            return;
        }
    }//GEN-LAST:event_btnDeleteBillActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String filterWord = jtfSearch.getText();
        List<AbstractObject> filteredList;
        if (bills == null || bills.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nemate ni jedan racun za pretragu.");
            return;
        }
        if (filterWord.equals("")) {
            btm.setBills(bills);
            btm.fireTableDataChanged();
        } else {
            try {
                filteredList = Controller.getControllerInstance().searchBills(filterWord);
                btm.setBills(filteredList);
                btm.fireTableDataChanged();
            } catch (Exception ex) {
                Logger.getLogger(BillsFrm.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showConfirmDialog(this, ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BillsFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BillsFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BillsFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BillsFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                new BillsFrm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddBill;
    private javax.swing.JButton btnDeleteBill;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdateBill;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLblKonobar;
    private javax.swing.JLabel jLblSumBill;
    private javax.swing.JLabel jLblTable;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jtfSearch;
    // End of variables declaration//GEN-END:variables

    private void fixForm() {
        try {
            jLblTable.setText(sto.getStoID() + "");
            jLblKonobar.setText(ulogovani.getName());
            bills = Controller.getControllerInstance().getBills(sto);
            if (bills.isEmpty()) {

            } else {
                btm = new BillsTableModel(bills);
                jTable1.setModel(btm);
            }
        } catch (Exception ex) {
            btm = new BillsTableModel(new ArrayList<>());
            jTable1.setModel(btm);
            JOptionPane.showMessageDialog(this, "Nema racuna za izabrani sto, unesite novi racun.");
        }
        jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                int row = jTable1.getSelectedRow();
                if(row == -1){
                    return;
                }else{
                    Racun r = (Racun) bills.get(row);
                    if(r.getPlacen() == 1){
                        btnUpdateBill.setEnabled(false);
                    }else{
                        btnUpdateBill.setEnabled(true);
                    }
                }
            }
        });
    }

    private void calculateDailyRevenue() {
        List<AbstractObject> bills = btm.getBills();
        double racun = 0;
        for (AbstractObject abstractObject : bills) {
            Racun r = (Racun) abstractObject;
            racun += r.getIznos();
        }
        jLblSumBill.setText(racun + "");
        sto.setUkupanDnevniIznos(racun);
        System.out.println(racun);
        try {
            Sto table = Controller.getControllerInstance().updateTable(sto);
            if (table != null) {
                JOptionPane.showMessageDialog(this, "Uspesno zapamcen sto");
            }
        } catch (Exception ex) {
            JOptionPane.showConfirmDialog(rootPane, ex.getMessage());
            Logger.getLogger(BillsFrm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void refreshList(Racun racun) {
        List<AbstractObject> racuni = btm.getBills();
        for (AbstractObject abstractObject : racuni) {
            Racun racun1 = (Racun) abstractObject;
            if (racun1.getRacunID() == racun.getRacunID()) {
                racun1.setStavkeRacuna(racun.getStavkeRacuna());
            } else {
                System.out.println("Greska pri dodavanju racuna u model tabele");
                return;
            }
        }
    }
}
