/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ServerController;
import domen.AbstractObject;
import domen.Konobar;
import exception.ServerException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import model.KonobariTableModel;

/**
 *
 * @author elezs
 */
public class KonobariFrm extends javax.swing.JFrame {

    List<AbstractObject> konobari;
    KonobariTableModel ktm;
    Konobar selectedKonobar;

    /**
     * Creates new form KonobariFrm
     */
    public KonobariFrm() {
        initComponents();
        fixForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtfPassword = new javax.swing.JTextField();
        jtfUsername = new javax.swing.JTextField();
        jtfName = new javax.swing.JTextField();
        btnDodajKonobaara = new javax.swing.JButton();
        btnObrisiKonobara = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKonobar = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jtfJMBG = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        jtfSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pregled konobara");

        jLabel1.setText("Ime");

        jLabel2.setText("Korisnicko ime");

        jLabel3.setText("Lozinka");

        btnDodajKonobaara.setText("+");
        btnDodajKonobaara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajKonobaaraActionPerformed(evt);
            }
        });

        btnObrisiKonobara.setText("-");
        btnObrisiKonobara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiKonobaraActionPerformed(evt);
            }
        });

        tblKonobar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6"
            }
        ));
        jScrollPane1.setViewportView(tblKonobar);

        jLabel4.setText("JMBG:");

        btnUpdate.setText("Sacuvaj izmene korisnika");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnSearch.setText("Pretrazi");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jLabel5.setText("Pretraga konobara:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtfName, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfJMBG, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnDodajKonobaara, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnObrisiKonobara, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jtfSearch))
                        .addGap(18, 18, 18)
                        .addComponent(btnSearch))
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnUpdate)
                .addGap(64, 64, 64))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jtfJMBG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearch)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addGap(7, 7, 7)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDodajKonobaara)
                    .addComponent(btnObrisiKonobara))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnUpdate)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDodajKonobaaraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajKonobaaraActionPerformed
        try {
            // TODO add your handling code here:
            if (checkTextFields()) {
                String jmbg = jtfJMBG.getText();
                String ime = jtfName.getText();
                String username = jtfUsername.getText();
                String password = jtfPassword.getText();
                if (validateValues(jmbg, ime, username, password).equals("go")) {
                    Konobar k = new Konobar(jmbg, ime, username, password, false);
                    Konobar k1 = (Konobar) ServerController.getServerController().saveUser(k);
                    if(k1 != null){
                        JOptionPane.showMessageDialog(this, "Uspesno dodat  konobar!");
                        konobari.add(k1);

                        ktm.fireTableDataChanged();
                        clearFields();
                    }else{
                        JOptionPane.showMessageDialog(this, "Korisnik nije uspesno dodat!");
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, validateValues(jmbg, ime, username, password));
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Morate popuniti sva polja za unos konobara!");
                return;
            }
        } catch (ServerException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
    }//GEN-LAST:event_btnDodajKonobaaraActionPerformed

    private void btnObrisiKonobaraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiKonobaraActionPerformed
        try {
            int selected = tblKonobar.getSelectedRow();
            Konobar k = (Konobar) konobari.get(selected);
            ServerController.getServerController().deleteUser(konobari.get(selected));
            //konobari.remove(selected);
            konobari.remove(k);
            ktm.fireTableDataChanged();
            JOptionPane.showMessageDialog(rootPane, "Uspesno obrisan konobar", "Obavestenje!", JOptionPane.INFORMATION_MESSAGE);
        } catch (ServerException ex) {
            JOptionPane.showMessageDialog(rootPane, "Konobar sadrzi racune. Izbrisite ih pre brisanja konobara!");
            return;
        }
    }//GEN-LAST:event_btnObrisiKonobaraActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        if (tblKonobar.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Morate odabrati korisnika koga menjate");
        } else {
            int index = tblKonobar.getSelectedRow();
//            Konobar k = ktm.getListaKonobara().get(index);
            if (selectedKonobar.getJMBG().equals(jtfJMBG.getText()) && selectedKonobar.getName().equals(jtfName.getText()) && selectedKonobar.getUsername().equals(jtfUsername.getText()) && selectedKonobar.getPassword().equals(jtfPassword.getText())) {
                JOptionPane.showMessageDialog(this, "Morate uneti neku izmenu");
            } else {
                try {
                    selectedKonobar.setJMBG(jtfJMBG.getText());
                    selectedKonobar.setName(jtfName.getText());
                    selectedKonobar.setUsername(jtfUsername.getText());
                    selectedKonobar.setPassword(jtfPassword.getText());
                    Konobar k1 = (Konobar) ServerController.getServerController().saveUser(selectedKonobar);
                    if(k1 != null){
                        konobari.remove(selectedKonobar);
                        konobari.add(k1);
                        ktm.fireTableDataChanged();
                        JOptionPane.showMessageDialog(rootPane, "Uspesno zapamcen konobar", "Obavestenje!", JOptionPane.INFORMATION_MESSAGE);
                        JOptionPane.showMessageDialog(rootPane, "Pamcenje konobara nije uspelo", "GRESKA!", JOptionPane.WARNING_MESSAGE);
                    }else{
                        JOptionPane.showMessageDialog(rootPane, "Pamcenje konobara nije uspelo", "GRESKA!", JOptionPane.WARNING_MESSAGE);
                    }
                } catch (ServerException ex) {
                    Logger.getLogger(KonobariFrm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String rec = "";
        if (!jtfSearch.getText().isEmpty()) {
            try {
                rec = jtfSearch.getText();
                List<AbstractObject> filtered = ServerController.getServerController().searchKonobar(rec);
                if(!filtered.isEmpty()){
                    JOptionPane.showMessageDialog(this, "Sistem nasao korisnika po zadatoj vrednosti!");
                    ktm.setListaKonobara(filtered);
                    ktm.fireTableDataChanged();
                }else {
                    JOptionPane.showMessageDialog(this, "Sistem nije nasao korisnika po zadatoj vrednosti!");
                }
            } catch (ServerException ex) {
                Logger.getLogger(KonobariFrm.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Greska pri pretrazi");
            }
        } else {
            ktm.setListaKonobara(konobari);
            ktm.fireTableDataChanged();
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KonobariFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KonobariFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KonobariFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KonobariFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KonobariFrm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodajKonobaara;
    private javax.swing.JButton btnObrisiKonobara;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jtfJMBG;
    private javax.swing.JTextField jtfName;
    private javax.swing.JTextField jtfPassword;
    private javax.swing.JTextField jtfSearch;
    private javax.swing.JTextField jtfUsername;
    private javax.swing.JTable tblKonobar;
    // End of variables declaration//GEN-END:variables

    private void fixForm() {
        try {
            konobari = ServerController.getServerController().getUserList();
            ktm = new KonobariTableModel(konobari);
            tblKonobar.setModel(ktm);
            tblKonobar.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
                @Override
                public void valueChanged(ListSelectionEvent e) {
                    int index = tblKonobar.getSelectedRow();
                    if (index == -1) {
                        clearFields();
                    } else {
                        Konobar k = (Konobar) ktm.getListaKonobara().get(index);
                        selectedKonobar = k;
                        jtfJMBG.setText(k.getJMBG());
                        jtfName.setText(k.getName());
                        jtfPassword.setText(k.getPassword());
                        jtfUsername.setText(k.getUsername());
                    }
                }
            });
        } catch (ServerException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
            Logger.getLogger(KonobariFrm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void clearFields() {
        jtfJMBG.setText("");
        jtfName.setText("");
        jtfUsername.setText("");
        jtfPassword.setText("");
    }

    private boolean checkTextFields() {
        if (jtfJMBG.getText().isEmpty() || jtfName.getText().isEmpty() || jtfPassword.getText().isEmpty() || jtfUsername.getText().isEmpty()) {
            return false;
        } else {
            return true;
        }
    }

    private String validateValues(String jmbg, String ime, String username, String password) {
        if (!ime.matches("[a-zA-Z_]+")) {
            return "Ime ne sme da sadrzi brojeve ili specijalne karaktere";
        } else if (!jmbg.matches("[0-9]+")) {
            return "JMBG ne sme da sadrzi slova ili specijalne karaktere";
        } else if (username.length() < 5) {
            return "Korisnicko ime mora imati bar 5 karaktera";
        } else if (password.length() < 5) {
            return "Sifra mora imati bar 5 karaktera";
        }else{
            return "go";
        }
    }
}
